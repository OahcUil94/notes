# -*- mode: ruby -*-
# vi: set ft=ruby :
# vagrantfile语法是ruby语法

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
# 2表示版本信息
Vagrant.configure("2") do |config|
  # 最常用的配置在下面列举出来, 剩下的参考官网
  # https://docs.vagrantup.com.

  # box镜像搜索地址 https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"

  # 禁用自动更新
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # 创建端口转发映射
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # 通过设置127.0.0.1来禁用公共访问虚拟机, 只能宿主机自身访问
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # 创建私有网络, 使用指定ip, 仅主机访问
  # config.vm.network "private_network", ip: "192.168.33.10"

  # 创建公共网络, 用来匹配桥接网络, 桥接网络使虚拟机看起来像网络上的一台物理设备
  # config.vm.network "public_network"

  # 共享目录到虚拟机中, 第一个参数是宿主机目录, 第二个参数是要挂载到虚拟机中的目录
  # config.vm.synced_folder "../data", "/vagrant_data"

  # 对不同虚拟平台进行相关的配置, 例如VirtualBox: 
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   # 引导虚拟机时, 显示VirtualBox GUI
  #   vb.gui = true
  #
  #   # 自定义虚拟机上的内存
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # 使用Shell脚本启用配置
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
